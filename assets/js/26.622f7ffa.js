(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{306:function(s,v,_){"use strict";_.r(v);var e=_(14),r=Object(e.a)({},(function(){var s=this,v=s._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[v("h1",{attrs:{id:"redis"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" Redis")]),s._v(" "),v("h2",{attrs:{id:"如何保持redis与mysql数据一致性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何保持redis与mysql数据一致性"}},[s._v("#")]),s._v(" 如何保持redis与mysql数据一致性：")]),s._v(" "),v("p",[s._v("双删策略")]),s._v(" "),v("ol",[v("li",[v("p",[s._v("先删缓存")])]),s._v(" "),v("li",[v("p",[s._v("再写入mysql")])]),s._v(" "),v("li",[v("p",[s._v("等待时间（500ms），再删除缓存。")]),s._v(" "),v("ul",[v("li",[s._v("此时删除的是写入mysql数据时，读行为在redis中产生的脏数据。产生的原因：第一次删除后，缓存中读不到数据，线程从mysql中将数据写入缓存，此时新数据还未写入mysql。")])])])]),s._v(" "),v("h2",{attrs:{id:"redis事务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redis事务"}},[s._v("#")]),s._v(" redis事务")]),s._v(" "),v("p",[s._v("redis事务是一组命令的集合，redis事务是非原子性的")]),s._v(" "),v("ul",[v("li",[s._v("开始事务：使用"),v("code",[s._v("MULIT")]),s._v("开始事务，将后续命令放入队列中。")]),s._v(" "),v("li",[s._v("提交事务：使用"),v("code",[s._v("EXEC")]),s._v("提交事务，此时开始串行化执行队列中的命令。")]),s._v(" "),v("li",[s._v("非原子性：redis事务中命令是串行化执行，但事务整体不是原子性的。")])]),s._v(" "),v("p",[s._v("事务其他命令：")]),s._v(" "),v("ul",[v("li",[s._v("取消事务："),v("code",[s._v("DISCARD")]),s._v("，取消事务中的所有命令")]),s._v(" "),v("li",[s._v("监视事务中的key："),v("code",[s._v("WATCH")]),s._v("，如果事务开始前，key被其他命令执行，则中断事务，不执行事务中的所有命令。")]),s._v(" "),v("li",[s._v("取消监视："),v("code",[s._v("UNWATCH")])])])])}),[],!1,null,null,null);v.default=r.exports}}]);